#========================================================================
# simp config answers
#
# Generated for simp scenario
# using simp-cli version 4.0.0
#------------------------------------------------------------------------
# You can use these answers to quickly configure subsequent
# simp installations by running the command:
#
#   simp config -A /PATH/TO/THIS/FILE
#
# simp config will prompt for any missing items.
#
# NOTE: All YAML keys that begin with 'cli::' are used
# by simp config, internally, and are not Puppet hieradata.
#========================================================================
---
# === cli::is_ldap_server ===
# Whether the SIMP server will also be the LDAP server.
#
cli::is_ldap_server: false
cli::is_simp_ldap_server: false

# === cli::network::dhcp ===
cli::network::dhcp: static

# === cli::network::gateway ===
# The default gateway.
cli::network::gateway: <%= $facts['defaultgateway'] %>

# === cli::network::hostname ===
# The FQDN of the system.
cli::network::hostname: <%= $facts['fqdn'] %>

# === cli::network::interface ===
# The network interface to use to connect to the network.
cli::network::interface: eth0

# === cli::network::ipaddress ===
# The IP address of the system.
cli::network::ipaddress: "<%= $facts['networking']['interfaces'].reduce('') |$memo, $value| {
  if $value[0] =~ /^e/ and $value[1]['ip'] and $value[1]['mac'] {
    $value[1]['ip']
  } else {
    $memo
  }
} %>"

# === cli::network::netmask ===
# The netmask of the system.
cli::network::netmask: "<%= $facts['networking']['interfaces'].reduce('') |$memo, $value| {
  if $value[0] =~ /^e/ and $value[1]['netmask'] and $value[1]['mac'] {
    $value[1]['netmask']
  } else {
    $memo
  }
} %>"

# === cli::network::set_up_nic ===
# Whether to activate this NIC now.
cli::network::set_up_nic: false

# === cli::set_grub_password ===
# Whether to set the GRUB password on this system.
cli::set_grub_password: true

# === cli::set_production_to_simp ===
# Whether to set default Puppet environment to 'simp'.
#
# Links the 'production' environment to 'simp', after backing up the
# existing production environment.
cli::set_production_to_simp: true

# === cli::simp::scenario ===
# The SIMP scenario.
#
# 'simp'      = Settings for a full SIMP system. Both the SIMP server
#               (this host) and all clients will be running with
#               all security features enabled.
# 'simp_lite' = Settings for a SIMP system in which some security features
#               are disabled for SIMP clients.  The SIMP server will
#               be running with all security features enabled.
# 'poss'      = Settings for a SIMP system in which all security features
#               for the SIMP clients are disabled.  The SIMP server will
#               be running with all security features enabled.
#
cli::simp::scenario: simp

# === cli::use_internet_simp_yum_repos ===
# Whether to configure SIMP nodes to use internet SIMP and
# SIMP dependency YUM repositories.
#
# When this option is enabled, Puppet-managed, YUM repository
# configurations will be created for both the SIMP server and
# SIMP clients. These configurations will point to official
# SIMP repositories.
cli::use_internet_simp_yum_repos: false

# === simp_grub::password ===
# The password to access GRUB.
#
# The value entered is used to set the GRUB password and to generate a hash
# stored in grub::password.
#
# This is 'bootpassword'
simp_grub::password: grub.pbkdf2.sha512.10000.6B7B377A81EEC2C76678E2BC56007FF3A95BD10A4887BE7A17CA606045A583AF4006B2D26E6D9913F681D3EF4FC3629788CA166F19812118B81B0B953FE9B5D9.B89E143690907BC46D8D24A8B8CE5C7F36EB177B1A1D3888BC4012B6619E83AE2389D058391228F6D917AC27B82EE4239C417FD4E9CEF9339C97E37D1EE8E126

# === puppetdb::master::config::puppetdb_port ===
# The PuppetDB server port number.
puppetdb::master::config::puppetdb_port: 8139

# === puppetdb::master::config::puppetdb_server ===
# The DNS name or IP of the PuppetDB server.
puppetdb::master::config::puppetdb_server: "%{lookup('simp_options::puppet::server')}"

# === simp::runlevel ===
# The default system runlevel (1-5).
simp::runlevel: 3

# === simp::server::allow_simp_user ===
# Whether to allow local 'simp' user su and ssh privileges.
#
# When SIMP is installed from ISO, a local user 'simp' is created to
# prevent server lockout. This capability should only be enabled
# when this user has been created.
simp::server::allow_simp_user: false

# === simp_openldap::server::conf::rootpw ===
# The LDAP Root password hash.
#
# When set via 'simp config', it is generated from the password
# entered on the command line.
# simp_openldap::server::conf::rootpw: "{SSHA}ySUHxmT5EmvoeXgwdMGXnwKgE8pO6Uiz"

# === simp_options::dns::search ===
# The DNS domain search string.
#
# Remember to put these in the appropriate order for your environment!
simp_options::dns::search:
- <%= $facts['domain'] %>
<% if $facts['virtual'] == 'gce' { -%>
- c.simp-training-controller.internal
- google.internal
<% } -%>

# === simp_options::dns::servers ===
# A list of DNS servers for the managed hosts.
#
# If the first entry of this list is set to '127.0.0.1', then
# all clients will configure themselves as caching DNS servers
# pointing to the other entries in the list.
#
# If you have a system that's including the 'named' class and
# is *not* in this list, then you'll need to set a variable at
# the top of that node entry called $named_server to 'true'.
# This will get around the convenience logic that was put in
# place to handle the caching entries and will not attempt to
# convert your system to a caching DNS server. You'll know
# that you have this situation if you end up with a duplicate
# definition for File['/etc/named.conf'].
simp_options::dns::servers:
<% if $facts['virtual'] == 'gce' { -%>
- 169.254.169.254
<% } else { -%>
- 8.8.8.8
- 8.8.4.4
<% } -%>

# === simp_options::fips ===
# Prepare system to use FIPS mode.
#
# simp_options::fips enforces strict compliance with FIPS-140-2.  All core SIMP modules
# can support this configuration. Enabling simp_options::fips here will enable
# FIPS on this puppet environment.
#
# IMPORTANT:
# (1) Be sure you know the security tradeoffs of FIPS-140-2 compliance.
#     FIPS mode disables the use of MD5 and may require weaker ciphers or key
#     lengths than your security policies allow.
# (2) If the system is currently in FIPS mode and you set this option to false,
#     the system will still work.  The reverse is not necessarily true.  See
#     SIMP documentation for instructions on how to safely convert a non-FIPS
#     system to a FIPS system.
#
simp_options::fips: false

# === simp_options::ldap::base_dn ===
# The Base Distinguished Name of the LDAP server.
# simp_options::ldap::base_dn: <%= $facts['domain'].split('.').map |$v| { "dc=${v}" }.join(',') %>

# === simp_options::ldap::bind_hash ===
# The salted LDAP Bind password hash.
# simp_options::ldap::bind_hash: "{SSHA}beEnOvYUvZDl93UQCsy3uEjTUUnF6+T6"

# === simp_options::ldap::bind_pw ===
# The LDAP Bind password.
# simp_options::ldap::bind_pw: g*8a9A*vq%uxf2wqeX78Xh8MCv5E+UDe

# === simp_options::ldap::sync_hash ===
#
# simp_options::ldap::sync_hash: "{SSHA}/0fwfO+49ezyFTpfw3xeR/8vr3EC+fm/"

# === simp_options::ldap::sync_pw ===
# The LDAP Sync password.
# simp_options::ldap::sync_pw: Q+3Uk8stXtoyF8tXU52fJFMjewSeON6W

# === simp_options::ntp::servers ===
# Your network's NTP time servers.
# A consistent time source is critical to your systems' security.
# DO NOT run multiple production systems using individual hardware clocks!
# For many networks, the default gateway (10.128.0.1) provides an NTP server.
simp_options::ntp::servers: []

# === simp_options::puppet::ca ===
# The Puppet Certificate Authority.
simp_options::puppet::ca: <%= $facts['fqdn'] %>

# === simp_options::puppet::ca_port ===
# The port on which the Puppet Certificate Authority will listen
# (8141 by default).
simp_options::puppet::ca_port: 8141

# === simp_options::puppet::server ===
# The Hostname or FQDN of the Puppet server.
simp_options::puppet::server: <%= $facts['fqdn'] %>

# === simp_options::syslog::log_servers ===
# The log server(s) to receive forwarded logs.
#
# No log forwarding is enabled when this list is empty.  Only use hostnames
# here if at all possible.
simp_options::syslog::log_servers: []

# === simp_options::trusted_nets ===
# A list of subnets to permit, in CIDR notation.
#
# If you need this to be more (or less) restrictive for a given class,
# you can override it in Hiera.
simp_options::trusted_nets:
<%
  $facts['networking']['interfaces'].reduce([]) |$memo, $interface| {
    if $interface[1]['ip'] and $interface[1]['netmask'] {
      $netmask = $interface[1]['netmask'] ? {
        '255.255.255.255' => '255.255.255.0',
        default           => $interface[1]['netmask'],
      }
      $memo + ["${interface[1]['ip']}/${netmask}"]
    } else {
      $memo
    }
  }.simplib::nets2cidr.each |$cidr| {
-%>
- <%= $cidr %>
<% } -%>
<% if $facts['virtual'] == 'gce' { -%>
- 169.254.169.254/32
<% } -%>

# === sssd::domains ===
# A list of domains for SSSD to use.
#
# * When `simp_options::ldap` is true, this field should include `LDAP`.
# * When `simp_options::ldap` is false, this field must be a valid
#   domain ('Local' and/or a custom domain) or the sssd service will
#   fail to start.
#
sssd::domains:
  - Local
  # - LDAP

# === svckill::mode ===
# Strategy svckill should use when it encounters undeclared services.
#
# 'enforcing' = Shut down and disable all services not listed in your
#               manifests or the exclusion file
# 'warning'   = Only report what undeclared services should be shut
#               down and disabled, without actually making the changes
#               to the system
#
# NOTICE: svckill is the mechanism that SIMP uses to comply with the
# requirement that no unauthorized services are running on your system.
# Is it HIGHLY recommended that you set this to 'enforcing'. Please be
# aware that, if you do this, svckill will stop ALL services that are
# not referenced in your Puppet configuration.
svckill::mode: warning

useradd::securetty: []

cli::local_priv_user: vagrant
cli::ensure_priv_local_user: yes
